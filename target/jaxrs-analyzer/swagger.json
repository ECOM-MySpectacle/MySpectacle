
{
    "swagger":"2.0",
    "info":{
        "version":"0.1.0.BUILD-SNAPSHOT",
        "title":"MyApplication"
    },
    "host":"",
    "basePath":"/MyApplication/api",
    "schemes":[
        "http"
    ],
    "paths":{
        "/artistes":{
            "get":{
                "description":"Get the complete list of Artiste Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /artistes",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArtisteEntity"
                            }
                        }
                    }
                }
            },
            "put":{
                "description":"Update an existing Artiste Entity <br/>\n HTTP Method: PUT <br/>\n PUT Request Body: Updated ArtisteEntity (JSON) <br/>\n Example URL: /artistes",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ArtisteEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArtisteEntity"
                        }
                    }
                }
            },
            "post":{
                "description":"Create a Artiste Entity <br/>\n HTTP Method: POST <br/>\n POST Request Body: New ArtisteEntity (JSON) <br/>\n Example URL: /artistes",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ArtisteEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArtisteEntity"
                        }
                    }
                }
            }
        },
        "/artistes/count":{
            "get":{
                "description":"Get the number of Artiste Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /artistes/count",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"integer"
                        }
                    }
                }
            }
        },
        "/artistes/{id}":{
            "get":{
                "description":"Get a Artiste Entity <br/>\n HTTP Method: GET <br/>\n Example URL: /artistes/3",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ArtisteEntity"
                        }
                    }
                }
            },
            "delete":{
                "description":"Delete an existing Artiste Entity <br/>\n HTTP Method: DELETE <br/>\n Example URL: /artistes/3",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            }
        },
        "/artistes/{id}/spectacless":{
            "get":{
                "description":"Get the list of Spectacless that is assigned to a Artiste <br/>\n HTTP Method: GET <br/>\n Example URL: /artistes/3/spectacless",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/SpectacleEntity"
                            }
                        }
                    }
                }
            }
        },
        "/artistes/{id}/spectacless/{spectaclesId}":{
            "put":{
                "description":"Assign an existing Spectacles to an existing Artiste <br/>\n HTTP Method: PUT <br/>\n PUT Request Body: empty <br/>\n Example URL: /artistes/3/spectacless/8",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"integer",
                        "name":"spectaclesId",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            },
            "delete":{
                "description":"Remove a Artiste-to-Spectacles Assignment <br/>\n HTTP Method: DELETE <br/>\n Example URL: /artistes/3/spectacless/8",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"integer",
                        "name":"spectaclesId",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            }
        },
        "/recherche":{
            "get":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/recherche/artistes":{
            "get":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            },
            "post":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/recherche/representations":{
            "get":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            },
            "post":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/recherche/salles":{
            "get":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            },
            "post":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/recherche/spectacles":{
            "get":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            },
            "post":{
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"string"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"string"
                        }
                    }
                }
            }
        },
        "/representations":{
            "get":{
                "description":"Get the complete list of Representation Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /representations",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/RepresentationEntity"
                            }
                        }
                    }
                }
            },
            "put":{
                "description":"Update an existing Representation Entity <br/>\n HTTP Method: PUT <br/>\n PUT Request Body: Updated RepresentationEntity (JSON) <br/>\n Example URL: /representations",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/RepresentationEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/RepresentationEntity"
                        }
                    }
                }
            },
            "post":{
                "description":"Create a Representation Entity <br/>\n HTTP Method: POST <br/>\n POST Request Body: New RepresentationEntity (JSON) <br/>\n Example URL: /representations",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/RepresentationEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/RepresentationEntity"
                        }
                    }
                }
            }
        },
        "/representations/count":{
            "get":{
                "description":"Get the number of Representation Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /representations/count",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"integer"
                        }
                    }
                }
            }
        },
        "/representations/{id}":{
            "get":{
                "description":"Get a Representation Entity <br/>\n HTTP Method: GET <br/>\n Example URL: /representations/3",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/RepresentationEntity"
                        }
                    }
                }
            },
            "delete":{
                "description":"Delete an existing Representation Entity <br/>\n HTTP Method: DELETE <br/>\n Example URL: /representations/3",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            }
        },
        "/reservations":{
            "get":{
                "description":"Get the complete list of Reservation Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /reservations",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ReservationEntity"
                            }
                        }
                    }
                }
            },
            "put":{
                "description":"Update an existing Reservation Entity <br/>\n HTTP Method: PUT <br/>\n PUT Request Body: Updated ReservationEntity (JSON) <br/>\n Example URL: /reservations",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ReservationEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ReservationEntity"
                        }
                    }
                }
            },
            "post":{
                "description":"Create a Reservation Entity <br/>\n HTTP Method: POST <br/>\n POST Request Body: New ReservationEntity (JSON) <br/>\n Example URL: /reservations",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/ReservationEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ReservationEntity"
                        }
                    }
                }
            }
        },
        "/reservations/count":{
            "get":{
                "description":"Get the number of Reservation Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /reservations/count",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"integer"
                        }
                    }
                }
            }
        },
        "/reservations/{id}":{
            "get":{
                "description":"Get a Reservation Entity <br/>\n HTTP Method: GET <br/>\n Example URL: /reservations/3",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/ReservationEntity"
                        }
                    }
                }
            },
            "delete":{
                "description":"Delete an existing Reservation Entity <br/>\n HTTP Method: DELETE <br/>\n Example URL: /reservations/3",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            }
        },
        "/salles":{
            "get":{
                "description":"Get the complete list of Salle Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /salles",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/SalleEntity"
                            }
                        }
                    }
                }
            },
            "put":{
                "description":"Update an existing Salle Entity <br/>\n HTTP Method: PUT <br/>\n PUT Request Body: Updated SalleEntity (JSON) <br/>\n Example URL: /salles",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SalleEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/SalleEntity"
                        }
                    }
                }
            },
            "post":{
                "description":"Create a Salle Entity <br/>\n HTTP Method: POST <br/>\n POST Request Body: New SalleEntity (JSON) <br/>\n Example URL: /salles",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SalleEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/SalleEntity"
                        }
                    }
                }
            }
        },
        "/salles/count":{
            "get":{
                "description":"Get the number of Salle Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /salles/count",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"integer"
                        }
                    }
                }
            }
        },
        "/salles/{id}":{
            "get":{
                "description":"Get a Salle Entity <br/>\n HTTP Method: GET <br/>\n Example URL: /salles/3",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/SalleEntity"
                        }
                    }
                }
            },
            "delete":{
                "description":"Delete an existing Salle Entity <br/>\n HTTP Method: DELETE <br/>\n Example URL: /salles/3",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            }
        },
        "/spectacles":{
            "get":{
                "description":"Get the complete list of Spectacle Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /spectacles",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/SpectacleEntity"
                            }
                        }
                    }
                }
            },
            "put":{
                "description":"Update an existing Spectacle Entity <br/>\n HTTP Method: PUT <br/>\n PUT Request Body: Updated SpectacleEntity (JSON) <br/>\n Example URL: /spectacles",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SpectacleEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/SpectacleEntity"
                        }
                    }
                }
            },
            "post":{
                "description":"Create a Spectacle Entity <br/>\n HTTP Method: POST <br/>\n POST Request Body: New SpectacleEntity (JSON) <br/>\n Example URL: /spectacles",
                "consumes":[
                    "application/json"
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "name":"body",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "$ref":"#/definitions/SpectacleEntity"
                        }
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/SpectacleEntity"
                        }
                    }
                }
            }
        },
        "/spectacles/count":{
            "get":{
                "description":"Get the number of Spectacle Entries <br/>\n HTTP Method: GET <br/>\n Example URL: /spectacles/count",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"integer"
                        }
                    }
                }
            }
        },
        "/spectacles/{id}":{
            "get":{
                "description":"Get a Spectacle Entity <br/>\n HTTP Method: GET <br/>\n Example URL: /spectacles/3",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "$ref":"#/definitions/SpectacleEntity"
                        }
                    }
                }
            },
            "delete":{
                "description":"Delete an existing Spectacle Entity <br/>\n HTTP Method: DELETE <br/>\n Example URL: /spectacles/3",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            }
        },
        "/spectacles/{id}/artistess":{
            "get":{
                "description":"Get the list of Artistess that is assigned to a Spectacle <br/>\n HTTP Method: GET <br/>\n Example URL: /spectacles/3/artistess",
                "consumes":[
                ],
                "produces":[
                    "application/json"
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "headers":{
                        },
                        "schema":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/ArtisteEntity"
                            }
                        }
                    }
                }
            }
        },
        "/spectacles/{id}/artistess/{artistesId}":{
            "put":{
                "description":"Assign an existing Artistes to an existing Spectacle <br/>\n HTTP Method: PUT <br/>\n PUT Request Body: empty <br/>\n Example URL: /spectacles/3/artistess/8",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"artistesId",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            },
            "delete":{
                "description":"Remove a Spectacle-to-Artistes Assignment <br/>\n HTTP Method: DELETE <br/>\n Example URL: /spectacles/3/artistess/8",
                "consumes":[
                ],
                "produces":[
                ],
                "parameters":[
                    {
                        "type":"integer",
                        "name":"artistesId",
                        "in":"path",
                        "required":true
                    },
                    {
                        "type":"integer",
                        "name":"id",
                        "in":"path",
                        "required":true
                    }
                ],
                "responses":{
                    "204":{
                        "description":"No Content",
                        "headers":{
                        }
                    }
                }
            }
        }
    },
    "definitions":{
        "ArtisteEntity":{
            "properties":{
                "bio":{
                    "type":"string"
                },
                "id":{
                    "type":"integer"
                },
                "nom":{
                    "type":"string"
                },
                "version":{
                    "type":"integer"
                }
            }
        },
        "RepresentationEntity":{
            "properties":{
                "date":{
                    "type":"object"
                },
                "id":{
                    "type":"integer"
                },
                "nbPlacesBalconLibres":{
                    "type":"integer"
                },
                "nbPlacesFosseLibres":{
                    "type":"integer"
                },
                "nbPlacesOrchestreLibres":{
                    "type":"integer"
                },
                "salle":{
                    "$ref":"#/definitions/SalleEntity"
                },
                "spectacle":{
                    "$ref":"#/definitions/SpectacleEntity"
                },
                "version":{
                    "type":"integer"
                }
            }
        },
        "ReservationEntity":{
            "properties":{
                "id":{
                    "type":"integer"
                },
                "modePaiement":{
                    "type":"string",
                    "enum":[
                        "CB",
                        "PAYPAL",
                        "SURPLACE"
                    ]
                },
                "nbPlaceBalcon":{
                    "type":"integer"
                },
                "nbPlaceFosse":{
                    "type":"integer"
                },
                "nbPlaceOrchestre":{
                    "type":"integer"
                },
                "version":{
                    "type":"integer"
                }
            }
        },
        "SalleEntity":{
            "properties":{
                "adresse":{
                    "type":"string"
                },
                "gestionnaire":{
                    "$ref":"#/definitions/UserEntity"
                },
                "id":{
                    "type":"integer"
                },
                "nbPlacesBalcon":{
                    "type":"integer"
                },
                "nbPlacesFosse":{
                    "type":"integer"
                },
                "nbPlacesOrchestre":{
                    "type":"integer"
                },
                "nom":{
                    "type":"string"
                },
                "version":{
                    "type":"integer"
                },
                "ville":{
                    "type":"string"
                }
            }
        },
        "SpectacleEntity":{
            "properties":{
                "description":{
                    "type":"string"
                },
                "genre":{
                    "type":"string",
                    "enum":[
                        "CABARET",
                        "CINEMA",
                        "CIRQUE",
                        "CONCERT",
                        "EXPOSITION",
                        "FESTIVAL",
                        "HUMOUR",
                        "LOISIR",
                        "MONUMENT",
                        "MUSEE",
                        "OPERA",
                        "PARC",
                        "SALON",
                        "SPECTACLE",
                        "SPECTACLEENFANT",
                        "SPORT",
                        "THEATRE"
                    ]
                },
                "id":{
                    "type":"integer"
                },
                "nom":{
                    "type":"string"
                },
                "publicc":{
                    "type":"string",
                    "enum":[
                        "ADOLESCENT",
                        "ADULTE",
                        "AMIS",
                        "COUPLE",
                        "ENFANT",
                        "FAMILLE"
                    ]
                },
                "theme":{
                    "type":"string"
                },
                "version":{
                    "type":"integer"
                }
            }
        },
        "UserEntity":{
            "properties":{
                "adresse":{
                    "type":"string"
                },
                "codePostal":{
                    "type":"string"
                },
                "createdAt":{
                    "type":"object"
                },
                "dateDeNaissance":{
                    "type":"object"
                },
                "email":{
                    "type":"string"
                },
                "emailConfirmationKey":{
                    "type":"string"
                },
                "emailResetPasswordKey":{
                    "type":"string"
                },
                "id":{
                    "type":"integer"
                },
                "nom":{
                    "type":"string"
                },
                "password":{
                    "type":"string"
                },
                "passwordResetDate":{
                    "type":"object"
                },
                "prenom":{
                    "type":"string"
                },
                "roles":{
                    "type":"string",
                    "enum":[
                        "Administrator",
                        "Gerant",
                        "Registered",
                        "Superviseur"
                    ]
                },
                "salt":{
                    "type":"string"
                },
                "status":{
                    "type":"string",
                    "enum":[
                        "Active",
                        "Disabled",
                        "NotConfirmed",
                        "RegistrationError"
                    ]
                },
                "username":{
                    "type":"string"
                },
                "version":{
                    "type":"integer"
                },
                "ville":{
                    "type":"string"
                }
            }
        }
    }
}